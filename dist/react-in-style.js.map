{"version":3,"sources":["react-in-style.js"],"names":[],"mappings":"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","file":"react-in-style.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('autoprefixer-core')) :\n    typeof define === 'function' && define.amd ? define(['autoprefixer-core'], factory) :\n    global.ReactInStyle = factory(global.autoprefixer)\n}(this, function (autoprefixer) { 'use strict';\n\n    let react_in_style__defaultAddOptions = {\n        noWarnings: false,\n        prefix:false\n    };\n    function toKebab(str){\n        str = str.replace(/([A-Z])/g, '-$1').toLowerCase();\n        return str;\n    }\n    class ReactInStyle {\n        constructor(options) {\n            this.setOptions(options);\n            this.init();\n        }\n        setOptions(options) {\n            options = options || {};\n            this.options = options;\n        }\n        init() {\n            this.unApliedStyles = {};\n            this.appliedStyles = {};\n            this.initStyleTag();\n        }\n        destroy() {\n            if (this.styleTag.parentNode) {\n                this.styleTag.parentNode.removeChild(this.styleTag);\n            }\n            this.init();\n        }\n        initStyleTag() {\n            this.styleTag = document.createElement('style');\n            this.styleTag.id = 'react-in-style';\n            document.getElementsByTagName('head')[0].appendChild(this.styleTag);\n        }\n        add(input, selector, options = react_in_style__defaultAddOptions) {\n            let style = input.prototype && input.prototype.style? input.prototype.style : input;\n            this.unApliedStyles[selector] = style;\n            this.renderStyles(options);       \n        }\n        applyMediaQuery(queries, style){\n            if(!queries || ! queries.length) {\n                return style;\n            }\n            return `@media (${queries.join(') and (')}) {${style}}`;\n        }\n        renderStyles(options) {\n            Object.keys(this.unApliedStyles).forEach((selector) => {\n                var style = this.unApliedStyles[selector];\n                delete this.unApliedStyles[selector];\n                this.appliedStyles[selector] = style;\n                var styleString = this.objToCss(style, selector);\n                if(options.prefix){\n                    styleString = autoprefixer.process(styleString).css;\n                }\n                styleString = this.applyMediaQuery(options.queries, styleString);\n                this.styleTag.innerHTML += styleString.trim() + '\\n';\n            });\n        }\n\n        objToCss(style, rootSelector = '', styles = []) {\n            var rootStyle = '';\n            Object.keys(style).forEach((key) => {\n                let spacer = ' ',\n                firstLetter = key[0], \n                selector = key;\n\n                if (firstLetter === '&') {\n                    spacer = '';\n                    selector = key.substring(1);\n                } \n                selector = selector.replace(/&/g, rootSelector);\n                if (typeof style[key] !== 'object') {\n                    rootStyle += toKebab(key) + ':' + style[key] + '; ';\n                } else {\n                    if (firstLetter === ':') {\n                        spacer = '';\n                    }\n                    var newKey = rootSelector + spacer + selector;\n                    this.objToCss(style[key], newKey, styles);\n                }\n            });\n            styles.unshift(rootSelector.trim() + '{' + rootStyle.trim() + '}');\n            return styles.join('\\n');\n        }\n    }\n    var react_in_style = new ReactInStyle();\n\n    return react_in_style;\n\n}));\n"],"sourceRoot":"/source/"}